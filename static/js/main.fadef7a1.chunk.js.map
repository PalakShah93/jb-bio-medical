{"version":3,"sources":["logo.svg","serviceWorker.js","helper/Nav.js","contact-us/contact.us.component.js","home/home.component.js","products/products.service.js","products/products.component.js","products/product.component.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CustomNavbar","props","console","log","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ContactUsComponent","handleSubmit","bind","handleMessage","handleProductCategory","handleProductName","handleUserEmail","handleUserPhone","handleUserName","onChangeCaptcha","product_name","params","product_category","foundParams","state","timestamp","user_name","user_phone","user_email","message","disable_product_fields","value","event","obj","this","getCurrentDateTime","validateFields","fetch","method","headers","body","JSON","stringify","then","res","status","sendWarningNotifs","catch","err","undefined","d","Date","day","getDay","hr","getHours","min","getMinutes","ampm","getDate","getMonth","getFullYear","e","setState","target","milliseconds","createNotification","type","submessage","NotificationManager","info","success","warning","error","alert","currentPage","Card","Body","Form","Row","Group","as","Col","Label","Control","onChange","placeholder","disabled","controlId","rows","Button","variant","onClick","React","Component","HomeComponent","src","logo","alt","to","ProductService","products","filter","el","Id","pop","ProductsComponent","getProducts","cards","forEach","product","push","getCard","style","width","display","Img","process","ImageUrl","Title","Name","Text","Description","ProductComponent","productId","getProductById","Image","height","thumbnail","PdfUrl","routing","basename","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fadef7a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nfunction CustomNavbar(props) {\n  console.log(props)\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">JB BIO</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#products\">Catalogue</Nav.Link>\n          <Nav.Link href=\"#contact\">Contact Us</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default CustomNavbar;\n","import React from 'react';\nimport CustomNavbar from '../helper/Nav'\nimport { Card, Form, Col, Button } from 'react-bootstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport './contact.us.css'\n\nclass ContactUsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n        this.handleProductCategory = this.handleProductCategory.bind(this);\n        this.handleProductName = this.handleProductName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUserEmail = this.handleUserEmail.bind(this);\n        this.handleUserPhone = this.handleUserPhone.bind(this);\n        this.handleUserName = this.handleUserName.bind(this);\n\n        this.onChangeCaptcha = this.onChangeCaptcha.bind(this);\n        console.log(props);\n        var product_name = \"\";\n        console.log(props.match.params.product_name)\n        if(props.match.params.product_name){\n            product_name = props.match.params.product_name\n        }\n        \n        var product_category = \"\";\n        console.log(props.match.params.product_category)\n        if(props.match.params.product_category){\n            product_category = props.match.params.product_category\n        }\n\n        var foundParams = false;\n        if(product_category == \"\"  || product_name == \"\"){\n            product_category = \"\";\n            product_name = \"\";\n        } else {\n            foundParams = true;\n        }\n        \n        console.log(product_category);\n        console.log(product_name);\n        \n        this.state = {\n            timestamp: \"\",\n            user_name: \"\",\n            user_phone: \"\",\n            user_email: \"\",\n            message: \"\",\n            product_name: product_name,\n            product_category: product_category,\n            disable_product_fields: foundParams\n        }\n    }\n\n    onChangeCaptcha(value) {\n        console.log(\"Captcha value:\", value);\n    }\n\n    handleSubmit(event) {\n        var obj = this.state;\n        obj.timestamp = this.getCurrentDateTime();\n        if (this.validateFields(obj)) {\n            fetch('https://sendmail-nodejs.herokuapp.com/sendmail', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                body: JSON.stringify(obj)\n            })\n                .then((res) => {\n                    //To many requests\n                    if (res.status == 429) {\n                        this.sendWarningNotifs(\"Error in submiting contact form.\", 180000)\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    this.sendWarningNotifs(\"Something went wrong!\", 3000)\n                })\n        }\n    }\n\n    validateFields(obj) {\n        //Assuming ProductName and Category can be empty\n        if (obj === null || obj === undefined || obj.timestamp === \"\" || obj.user_name === \"\" || obj.user_email === \"\" || obj.user_phone === \"\" || obj.message === \"\") {\n            this.sendWarningNotifs(\"All fileds must be filled!\", 3000)\n            return false;\n        }\n\n        return true;\n    }\n\n    getCurrentDateTime() {\n        var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        var d = new Date();\n        var day = days[d.getDay()];\n        var hr = d.getHours();\n        var min = d.getMinutes();\n        if (min < 10) {\n            min = \"0\" + min;\n        }\n        var ampm = \"am\";\n        if (hr > 12) {\n            hr -= 12;\n            ampm = \"pm\";\n        }\n        var date = d.getDate();\n        var month = months[d.getMonth()];\n        var year = d.getFullYear();\n        return day + \" \" + hr + \":\" + min + ampm + \" \" + date + \" \" + month + \" \" + year;\n    }\n\n    handleProductName(e) {\n        this.setState({ product_name: e.target.value });\n    }\n\n    handleProductCategory(e) {\n        this.setState({ product_category: e.target.value });\n    }\n\n    handleUserEmail(e) {\n        this.setState({ user_email: e.target.value });\n    }\n\n    handleUserPhone(e) {\n        this.setState({ user_phone: e.target.value });\n    }\n\n    handleUserName(e) {\n        this.setState({ user_name: e.target.value });\n    }\n\n    handleMessage(e) {\n        this.setState({ message: e.target.value });\n    }\n\n    sendWarningNotifs(message, milliseconds) {\n        this.createNotification(\"warning\", message, null, milliseconds);\n    }\n\n    createNotification(type, message, submessage, milliseconds) {\n        submessage = submessage == null ? `Close after ${milliseconds}ms` : submessage;\n        switch (type) {\n            case 'info':\n                NotificationManager.info(message);\n                break;\n            case 'success':\n                NotificationManager.success(submessage, message);\n                break;\n            case 'warning':\n                NotificationManager.warning(submessage, message, milliseconds);\n                break;\n            case 'error':\n                NotificationManager.error('Error message', 'Click me!', 5000, () => {\n                    alert('callback');\n                });\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <CustomNavbar currentPage=\"products\" />\n                <NotificationContainer />\n                <Card>\n                    <Card.Body>\n                        <Form>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Product Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.product_name} onChange={this.handleProductName} placeholder=\"product name\" disabled={this.state.disable_product_fields}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col}>\n                                    <Form.Label>Product Category</Form.Label>\n                                    <Form.Control type=\"ext\" value={this.state.product_category} onChange={this.handleProductCategory} placeholder=\"Category\" disabled={this.state.disable_product_fields}/>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridName\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.user_name} onChange={this.handleUserName} placeholder=\"Enter Name\" />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" value={this.state.user_email} onChange={this.handleUserEmail} placeholder=\"Enter email\" />\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.user_phone} onChange={this.handleUserPhone} placeholder=\"Enter phone number\" />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Message</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleMessage} />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n                                Submit\n                            </Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </>);\n    }\n}\n\nexport default ContactUsComponent;","import React from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Link } from 'react-router-dom'\n\nimport CustomNavbar from '../helper/Nav'\n\nclass HomeComponent extends React.Component {\n    render() {\n        return (\n            <>\n            <CustomNavbar currentPage=\"products\"/>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                    Welcome to JB Bio Medical Equipments Showcase!\n                    </p>\n                    <Link to=\"/products\">Catalogue</Link>\n                    <Link to=\"/contact\">Contact Us</Link>\n                </header>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default HomeComponent","import { Product } from './product';\nimport products from './products.json';\n\nexport class ProductService{\n\n    static getProducts(){\n        return products;\n    }\n\n    static getProductById(id): Product{\n        return products.filter(el => el.Id === id).pop();\n    }\n}","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\n\nimport { Product } from './product';\nimport { ProductService } from './products.service'\nimport CustomNavbar from '../helper/Nav'\n\nimport './products.css'\n\nclass ProductsComponent extends React.Component {\n    products: Product[];\n\n    constructor() {\n        super();\n        this.products = [];\n        this.products = ProductService.getProducts();\n    }\n\n    render() {\n        let cards = [];\n        this.products.forEach(product => {\n            cards.push(this.getCard(product));\n        })\n        return (\n            <div>\n                <CustomNavbar currentPage=\"products\"/>\n                {cards}\n            </div>);\n    }\n\n    getCard(product) {\n        return (\n            <Card style={{ width: '18rem', display: \"inline-block\" }}>\n                <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + product.ImageUrl} />\n                <Card.Body>\n                    <Card.Title>{product.Name}</Card.Title>\n                    <Card.Text>\n                        {product.Description}\n                    </Card.Text>\n                    <Link to={\"/contact/\"+product.Name+\"/\"+\"General\"}>\n                        <Button variant=\"primary\" >Enquire Now</Button>\n                    </Link>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default ProductsComponent","import React from 'react';\nimport { Product } from './product';\nimport { ProductService } from './products.service'\nimport { Image } from 'react-bootstrap';\nimport './product.css';\nimport CustomNavbar from '../helper/Nav'\n\nclass ProductComponent extends React.Component {\n\n    products: Product[];\n\n    constructor(props) {\n        super(props);\n        console.log(\"props\")\n\n        this.productId = props.match.params.id;\n        console.log(this.productId)\n        this.product = ProductService.getProductById(this.productId)\n        console.log(this.product)\n        this.products = [];\n        this.products = ProductService.getProducts();\n    }\n\n    render() {\n        return (\n            <>\n            <CustomNavbar currentPage=\"products\"/>\n            <div className=\"product\">\n                <div className=\"product-left-div\">\n                    <Image src={process.env.PUBLIC_URL + this.product.ImageUrl} height=\"100\" width=\"150\" thumbnail /><br />\n                </div>\n                <div className=\"product-right-div\">\n                    <h3>{this.product.Name}</h3><br />\n                    <span className=\"description\">{this.product.Description}</span><br />\n                    <br/>\n                    <a href={process.env.PUBLIC_URL + this.product.PdfUrl}>pdf version</a>\n                </div>\n                <br /><br />\n            </div>\n            </>);\n    }\n}\n\nexport default ProductComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, HashRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Routing\nimport ContactUsComponent from './contact-us/contact.us.component'\nimport HomeComponent from './home/home.component'\nimport ProductsComponent from './products/products.component'\nimport ProductComponent from './products/product.component'\n\n\nconst routing = (\n  <HashRouter basename=\"/\">\n    <div>\n      <Route path=\"/home\" component={HomeComponent} />\n      <Route path=\"/products\" component={ProductsComponent} />\n      <Route path=\"/product/:id\" component={ProductComponent} />\n      <Route exact path=\"/contact\" component={ContactUsComponent} />\n      <Route exact path=\"/contact/:product_name/:product_category\" component={ContactUsComponent} />\n    </div>\n    <footer>v1.2</footer>\n  </HashRouter>\n)\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}