{"version":3,"sources":["contact-us/maps.png","logo.svg","serviceWorker.js","helper/Nav.js","contact-us/contact.us.component.js","home/home.component.js","products/products.service.js","products/products.component.js","products/product.component.js","about-us/about.us.component.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CustomNavbar","props","onChangeSearchField","bind","onSearchClicked","state","searchField","e","this","setState","target","value","history","push","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","onChange","Button","variant","onClick","React","Component","withRouter","ContactUsComponent","handleSubmit","handleMessage","handleProductCategory","handleProductName","handleUserEmail","handleUserPhone","handleUserName","onChangeCaptcha","console","log","product_name","params","product_category","foundParams","timestamp","user_name","user_phone","user_email","message","disable_product_fields","formSubmitted","processing","event","obj","getCurrentDateTime","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","validateFields","fetch","method","headers","body","JSON","stringify","then","res","status","sendWarningNotifs","catch","err","undefined","d","Date","day","getDay","hr","getHours","min","getMinutes","ampm","getDate","getMonth","getFullYear","milliseconds","createNotification","submessage","NotificationManager","info","success","warning","error","renderSubmission","currentPage","Card","Header","as","Body","Row","Group","Col","Label","Control","disabled","controlId","rows","renderLoading","Title","Text","src","maps","Spinner","animation","size","role","aria-hidden","Alert","Heading","to","HomeComponent","logo","alt","ProductService","products","filter","el","Id","pop","ProductsComponent","getProducts","cards","forEach","product","getCard","style","width","display","Img","process","ImageUrl","Name","Badge","Category","Description","ProductComponent","productId","getProductById","Image","height","thumbnail","PdfUrl","AboutUsComponent","routing","basename","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.451b33cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maps.6b62e891.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom'\n\nclass CustomNavbar extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.onChangeSearchField = this.onChangeSearchField.bind(this)\n    this.onSearchClicked = this.onSearchClicked.bind(this)\n\n    this.state = {\n      searchField: \"\"\n    }\n  }\n\n  onChangeSearchField(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  onSearchClicked(e) {\n    this.props.history.push('/products?search='+this.state.searchField)\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">JB BIO Med</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#products\">Catalogue</Nav.Link>\n            <Nav.Link href=\"#contact\">Contact Us</Nav.Link>\n            <Nav.Link href=\"#about\">About Us</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" value={this.state.searchField} onChange={this.onChangeSearchField} className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\" onClick={this.onSearchClicked}>Search</Button>\n        </Form>\n      </Navbar>\n    );\n  }\n}\n\nexport default withRouter(CustomNavbar);\n","import React from 'react';\nimport CustomNavbar from '../helper/Nav'\nimport { Card, Form, Col, Button, Alert,Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport './contact.us.css'\nimport maps from './maps.png'\n\nclass ContactUsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n        this.handleProductCategory = this.handleProductCategory.bind(this);\n        this.handleProductName = this.handleProductName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUserEmail = this.handleUserEmail.bind(this);\n        this.handleUserPhone = this.handleUserPhone.bind(this);\n        this.handleUserName = this.handleUserName.bind(this);\n\n        this.onChangeCaptcha = this.onChangeCaptcha.bind(this);\n        console.log(props);\n        var product_name = \"\";\n        console.log(props.match.params.product_name)\n        if (props.match.params.product_name) {\n            product_name = props.match.params.product_name\n        }\n\n        var product_category = \"\";\n        console.log(props.match.params.product_category)\n        if (props.match.params.product_category) {\n            product_category = props.match.params.product_category\n        }\n\n        var foundParams = false;\n        if (product_category == \"\" || product_name == \"\") {\n            product_category = \"\";\n            product_name = \"\";\n        } else {\n            foundParams = true;\n        }\n\n        console.log(product_category);\n        console.log(product_name);\n\n        this.state = {\n            timestamp: \"\",\n            user_name: \"\",\n            user_phone: \"\",\n            user_email: \"\",\n            message: \"\",\n            product_name: product_name,\n            product_category: product_category,\n            disable_product_fields: foundParams,\n            formSubmitted: false,\n            processing: false\n        }\n    }\n\n    onChangeCaptcha(value) {\n        console.log(\"Captcha value:\", value);\n    }\n\n    handleSubmit(event) {\n        var obj = this.state;\n        obj.timestamp = this.getCurrentDateTime();\n        obj.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.setState({ processing: true })\n\n        if (this.validateFields(obj)) {\n            fetch('https://sendmail-nodejs.herokuapp.com/sendmail', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                body: JSON.stringify(obj)\n            })\n                .then((res) => {\n                    //To many requests\n                    if (res.status == 429) {\n                        this.sendWarningNotifs(\"Error in submiting contact form.\", 180000)\n                        this.setState({ processing: false })\n                    } else {\n                        this.setState({\n                            formSubmitted: true,\n                            processing: false\n                        })\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    this.sendWarningNotifs(\"Something went wrong!\", 3000)\n                    this.setState({ processing: false })\n                })\n        }\n        else {\n            this.setState({ processing: false })\n        }\n    }\n\n    validateFields(obj) {\n        //Assuming ProductName and Category can be empty\n        if (obj === null || obj === undefined || obj.timestamp === \"\" || obj.user_name === \"\" || obj.user_email === \"\" || obj.user_phone === \"\" || obj.message === \"\") {\n            this.sendWarningNotifs(\"All fileds must be filled!\", 3000)\n            return false;\n        }\n\n        return true;\n    }\n\n    getCurrentDateTime() {\n        var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        var d = new Date();\n        var day = days[d.getDay()];\n        var hr = d.getHours();\n        var min = d.getMinutes();\n        if (min < 10) {\n            min = \"0\" + min;\n        }\n        var ampm = \"am\";\n        if (hr > 12) {\n            hr -= 12;\n            ampm = \"pm\";\n        }\n        var date = d.getDate();\n        var month = months[d.getMonth()];\n        var year = d.getFullYear();\n        return day + \" \" + hr + \":\" + min + ampm + \" \" + date + \" \" + month + \" \" + year;\n    }\n\n    handleProductName(e) {\n        this.setState({ product_name: e.target.value });\n    }\n\n    handleProductCategory(e) {\n        this.setState({ product_category: e.target.value });\n    }\n\n    handleUserEmail(e) {\n        this.setState({ user_email: e.target.value });\n    }\n\n    handleUserPhone(e) {\n        this.setState({ user_phone: e.target.value });\n    }\n\n    handleUserName(e) {\n        this.setState({ user_name: e.target.value });\n    }\n\n    handleMessage(e) {\n        this.setState({ message: e.target.value });\n    }\n\n    sendWarningNotifs(message, milliseconds) {\n        this.createNotification(\"warning\", message, null, milliseconds);\n    }\n\n    createNotification(type, message, submessage, milliseconds) {\n        submessage = submessage == null ? `Close after ${milliseconds}ms` : submessage;\n        switch (type) {\n            case 'info':\n                NotificationManager.info(message);\n                break;\n            case 'success':\n                NotificationManager.success(submessage, message);\n                break;\n            case 'warning':\n                NotificationManager.warning(submessage, message, milliseconds);\n                break;\n            case 'error':\n                NotificationManager.error('Error message', 'Click me!', 5000, () => {\n                    console.log(\"callback\")\n                });\n                break;\n        }\n    }\n\n    render() {\n        if (this.state.formSubmitted) {\n            return this.renderSubmission();\n        }\n        else return (\n            <>\n                <CustomNavbar currentPage=\"products\" />\n                <NotificationContainer />\n                <Card>\n                    <Card.Header as=\"h5\">Inquire</Card.Header>\n                    <Card.Body>\n                        <Form>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Product Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.product_name} onChange={this.handleProductName} placeholder=\"product name\" disabled={this.state.disable_product_fields || this.state.processing} />\n                                </Form.Group>\n\n                                <Form.Group as={Col}>\n                                    <Form.Label>Product Category</Form.Label>\n                                    <Form.Control type=\"ext\" value={this.state.product_category} onChange={this.handleProductCategory} placeholder=\"Category\" disabled={this.state.disable_product_fields || this.state.processing} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridName\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.user_name} onChange={this.handleUserName} placeholder=\"Enter Name\" disabled={this.state.processing} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" value={this.state.user_email} onChange={this.handleUserEmail} placeholder=\"Enter email\" disabled={this.state.processing} />\n                                </Form.Group>\n                                <Form.Group as={Col}>\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.user_phone} onChange={this.handleUserPhone} placeholder=\"Enter phone number\" disabled={this.state.processing} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Message</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleMessage} disabled={this.state.processing} />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit} disabled={this.state.processing}>\n                                {this.state.processing ?\n                                    this.renderLoading() : \"Submit\"}\n                            </Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                <Card>\n                    <Card.Header as=\"h5\">Contact Details</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Company Address</Card.Title>\n                        <Card.Text>\n                            A-117, Tirthraj Complex, Opp. V S Hospital, <br/>\n                            Ellisbridge, Ahmedabad-380006 <br/>\n                            <img src={maps} />\n                        </Card.Text>\n                        <Card.Title>Contact Number</Card.Title>\n                        <Card.Text>\n                            +91 9825065681\n                        </Card.Text>\n                        <Button variant=\"primary\" href=\"whatsapp://send?phone=+919825065681\">Open on Whatsapp</Button>\n                    </Card.Body>\n                </Card>\n            </>);\n    }\n\n    renderLoading() {\n        return (\n            <>\n                <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                />\n                Processing...\n            </>\n        );\n    }\n\n    renderSubmission() {\n        return (\n            <>\n                <CustomNavbar currentPage=\"products\" />\n                <NotificationContainer />\n                <br />\n                <br />\n                <Alert variant=\"success\">\n                    <Alert.Heading>Thank you for contacting us!</Alert.Heading>\n                    <p>\n                        Contact form has been submitted based on the contact details, the admin will contact you as soon as possible.\n                    </p>\n                    <hr />\n                    <div className=\"d-flex justify-content-end\">\n                        <Link to={\"/products\"}>\n                            <Button variant=\"outline-success\">\n                                View Products\n                        </Button>\n                        </Link>\n                    </div>\n                </Alert>\n            </>\n        );\n    }\n}\n\nexport default ContactUsComponent;","import React from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Link } from 'react-router-dom'\n\nimport CustomNavbar from '../helper/Nav'\n\nclass HomeComponent extends React.Component {\n    render() {\n        return (\n            <>\n            <CustomNavbar currentPage=\"products\"/>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                    Welcome to JB Bio Medical Equipments Showcase!\n                    </p>\n                    <Link to=\"/products\">Catalogue</Link>\n                    <Link to=\"/contact\">Contact Us</Link>\n                </header>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default HomeComponent","import { Product } from './product';\nimport products from './products.json';\n\nexport class ProductService{\n\n    static getProducts(){\n        return products;\n    }\n\n    static getProductById(id): Product{\n        return products.filter(el => el.Id === id).pop();\n    }\n}","import React from 'react';\nimport { Card, Button,Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\n\nimport { Product } from './product';\nimport { ProductService } from './products.service'\nimport CustomNavbar from '../helper/Nav'\n\nimport './products.css'\n\nclass ProductsComponent extends React.Component {\n    products: Product[];\n\n    constructor() {\n        super();\n        this.products = [];\n        this.products = ProductService.getProducts();\n    }\n\n    render() {\n        let cards = [];\n        this.products.forEach(product => {\n            cards.push(this.getCard(product));\n        })\n        return (\n            <div>\n                <CustomNavbar currentPage=\"products\" />\n                {cards}\n            </div>);\n    }\n\n    getCard(product) {\n        return (\n            <Card style={{ width: '18rem', display: \"inline-block\" }}>\n                <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + product.ImageUrl} />\n                <Card.Body>\n                    <Card.Title>{product.Name}</Card.Title>\n                    <Card.Text>\n                        <Badge variant=\"secondary\">{product.Category}</Badge>\n                        <br/>\n                        <br/>\n                        {product.Description}\n                    </Card.Text>\n                    <Link to={\"/contact/\" + product.Name + \"/\" + \"General\"}>\n                        <Button variant=\"primary\" >Enquire Now</Button>\n                    </Link>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default ProductsComponent","import React from 'react';\nimport { Product } from './product';\nimport { ProductService } from './products.service'\nimport { Image } from 'react-bootstrap';\nimport './product.css';\nimport CustomNavbar from '../helper/Nav'\n\nclass ProductComponent extends React.Component {\n\n    products: Product[];\n\n    constructor(props) {\n        super(props);\n        console.log(\"props\")\n\n        this.productId = props.match.params.id;\n        console.log(this.productId)\n        this.product = ProductService.getProductById(this.productId)\n        console.log(this.product)\n        this.products = [];\n        this.products = ProductService.getProducts();\n    }\n\n    render() {\n        return (\n            <>\n            <CustomNavbar currentPage=\"products\"/>\n            <div className=\"product\">\n                <div className=\"product-left-div\">\n                    <Image src={process.env.PUBLIC_URL + this.product.ImageUrl} height=\"100\" width=\"150\" thumbnail /><br />\n                </div>\n                <div className=\"product-right-div\">\n                    <h3>{this.product.Name}</h3><br />\n                    <span className=\"description\">{this.product.Description}</span><br />\n                    <br/>\n                    <a href={process.env.PUBLIC_URL + this.product.PdfUrl}>pdf version</a>\n                </div>\n                <br /><br />\n            </div>\n            </>);\n    }\n}\n\nexport default ProductComponent","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { Card,Button } from 'react-bootstrap';\nimport CustomNavbar from '../helper/Nav'\n\nclass AboutUsComponent extends React.Component {\n    render() {\n        return (\n            <>\n                <CustomNavbar currentPage=\"products\" />\n                <Card>\n                    <Card.Header as=\"h5\">About Us</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                        J B Biomed is a leading brand in dealing with High tech medical and Endoscopy equipemnts/ instruments, Surgical Lasers in all the major discipline.\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card>\n                    <Card.Header as=\"h5\">Mission and Vision</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                        Our Mission and vision are to provide high-tech/ minimal invasive surgical and medical equipment at a very economical price. Also will provide the necessary service to maintain the equipment.\n                        <br />\n                        Our contribution to give continuous support and provide academic help to explore more and more advance surgical operative procedures with high-tech equipments at reasonable charges.\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </>\n        );\n    }\n}\n\nexport default AboutUsComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, HashRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Routing\nimport ContactUsComponent from './contact-us/contact.us.component'\nimport HomeComponent from './home/home.component'\nimport ProductsComponent from './products/products.component'\nimport ProductComponent from './products/product.component'\nimport AboutUsComponent from './about-us/about.us.component';\n\n\nconst routing = (\n  <HashRouter basename=\"/\">\n    <div>\n      <Route path=\"/home\" component={HomeComponent} />\n      <Route path=\"/products\" component={ProductsComponent} />\n      <Route path=\"/product/:id\" component={ProductComponent} />\n      <Route exact path=\"/contact\" component={ContactUsComponent} />\n      <Route exact path=\"/about\" component={AboutUsComponent} />\n      <Route exact path=\"/contact/:product_name/:product_category\" component={ContactUsComponent} />\n    </div>\n  </HashRouter>\n)\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}